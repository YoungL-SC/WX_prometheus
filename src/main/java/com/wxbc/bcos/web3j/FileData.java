package com.wxbc.bcos.web3j;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.concurrent.Future;
import org.bcos.channel.client.TransactionSucCallback;
import org.bcos.web3j.abi.TypeReference;
import org.bcos.web3j.abi.datatypes.Address;
import org.bcos.web3j.abi.datatypes.Function;
import org.bcos.web3j.abi.datatypes.Type;
import org.bcos.web3j.abi.datatypes.Utf8String;
import org.bcos.web3j.abi.datatypes.generated.Int256;
import org.bcos.web3j.abi.datatypes.generated.Uint256;
import org.bcos.web3j.crypto.Credentials;
import org.bcos.web3j.protocol.Web3j;
import org.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.bcos.web3j.tx.Contract;
import org.bcos.web3j.tx.TransactionManager;

/**
 * Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>, or {@link org.bcos.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version none.
 */
public final class FileData extends Contract {
    private static final String BINARY = "60606040526000600155341561001457600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121c3806100636000396000f300606060405236156100ce576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063180db1b4146100d35780631bd95155146100fc5780632ced7cef1461016d578063319af333146102645780633ca6268e146102f45780633ffbd47f1461036e57806341304fac1461040e57806341c0e1b51461047f57806347064d6a146104945780634b5c4277146105095780635e01eb5a146105bd578063893d20e81461064b578063ae55c888146106d9578063b60e72cc146107af575b600080fd5b34156100de57600080fd5b6100e6610829565b6040518082815260200191505060405180910390f35b341561010757600080fd5b610157600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610833565b6040518082815260200191505060405180910390f35b341561017857600080fd5b61024e600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061090a565b6040518082815260200191505060405180910390f35b341561026f57600080fd5b6102de600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061097f565b6040518082815260200191505060405180910390f35b34156102ff57600080fd5b610358600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050610a05565b6040518082815260200191505060405180910390f35b341561037957600080fd5b61040c600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610a75565b005b341561041957600080fd5b610469600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610a79565b6040518082815260200191505060405180910390f35b341561048a57600080fd5b610492610aad565b005b341561049f57600080fd5b6104ef600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610b0b565b604051808215151515815260200191505060405180910390f35b341561051457600080fd5b6105a7600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610c3c565b6040518082815260200191505060405180910390f35b34156105c857600080fd5b6105d0610c81565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156106105780820151818401526020810190506105f5565b50505050905090810190601f16801561063d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561065657600080fd5b61065e610cad565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069e578082015181840152602081019050610683565b50505050905090810190601f1680156106cb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156106e457600080fd5b610734600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610cfa565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610774578082015181840152602081019050610759565b50505050905090810190601f1680156107a15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156107ba57600080fd5b610813600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035906020019091905050610e63565b6040518082815260200191505060405180910390f35b6000600154905090565b600080600083519150602082111561084a57602091505b60009250600090505b602081101561090357818110156108f057838181518110151561087257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1661010084020192506108f8565b610100830292505b806001019050610853565b5050919050565b60006109146120ca565b6020604051908101604052806000815250905061093c858583610ecf9092919063ffffffff16565b905061094783610833565b6001026000191661095782610833565b60010260405180826000191660001916815260200191505060405180910390a1509392505050565b60006109896120ca565b602060405190810160405280600081525090506109cf846109bf8573ffffffffffffffffffffffffffffffffffffffff16610f6b565b83610ecf9092919063ffffffff16565b90506109da81610833565b60010260405180826000191660001916815260200191505060405180910390a0600091505092915050565b6000610a0f6120ca565b60206040519081016040528060008152509050610a3f84610a2f85611175565b83610ecf9092919063ffffffff16565b9050610a4a81610833565b60010260405180826000191660001916815260200191505060405180910390a0600091505092915050565b5050565b6000610a8482610833565b60010260405180826000191660001916815260200191505060405180910390a060009050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b0857610b09565b5b565b6000610b156120ca565b610b1d6120ca565b610b656040805190810160405280600981526020017f696e6465784861736800000000000000000000000000000000000000000000008152508561134f90919063ffffffff16565b9150610baf6040805190810160405280600881526020017f66696c65486173680000000000000000000000000000000000000000000000008152508561134f90919063ffffffff16565b9050806002836040518082805190602001908083835b602083101515610bea5780518252602082019150602081019050602083039250610bc5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209080519060200190610c309291906120de565b50600192505050919050565b6000610c4782610833565b60010260001916610c5784610833565b60010260405180826000191660001916815260200191505060405180910390a16000905092915050565b610c896120ca565b610ca83373ffffffffffffffffffffffffffffffffffffffff16611a92565b905090565b610cb56120ca565b610cf56000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611a92565b905090565b610d026120ca565b610d0a6120ca565b610d526040805190810160405280600981526020017f696e6465784861736800000000000000000000000000000000000000000000008152508461134f90919063ffffffff16565b90506002816040518082805190602001908083835b602083101515610d8c5780518252602082019150602081019050602083039250610d67565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e535780601f10610e2857610100808354040283529160200191610e53565b820191906000526020600020905b815481529060010190602001808311610e3657829003601f168201915b5050505050915081915050919050565b6000610e6d6120ca565b60206040519081016040528060008152509050610e9d84610e8d85611c9f565b83610ecf9092919063ffffffff16565b9050610ea881610833565b60010260405180826000191660001916815260200191505060405180910390a05092915050565b610ed76120ca565b6000806000806000865188518a510101604051805910610ef45750595b9080825280602002602001820160405250955060208901945060208801935060208701925060208601915060009050610f31818301868b51611de9565b885181019050610f45818301858a51611de9565b875181019050610f59818301848951611de9565b86518101905050505050509392505050565b610f736120ca565b600080602a604051805910610f855750595b908082528060200260200182016040525092507f3000000000000000000000000000000000000000000000000000000000000000836000815181101515610fc857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000083600181518110151561102857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350602991505b60028260ff1610151561116e57600f8416905060108481151561107c57fe5b049350600a8160ff1610156110f757603081017f010000000000000000000000000000000000000000000000000000000000000002838360ff168151811015156110c257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611162565b6061600a8203017f010000000000000000000000000000000000000000000000000000000000000002838360ff1681518110151561113157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8160019003915061105d565b5050919050565b61117d6120ca565b6000806000806000808714156111ca576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509550611345565b869450600193506000925060008712156111f1578660000394506000935082806001019350505b8491505b600082111561121a57600a8281151561120a57fe5b04915082806001019350506111f5565b8260ff1660405180591061122b5750595b908082528060200260200182016040525095508315156112a6577f2d0000000000000000000000000000000000000000000000000000000000000086600081518110151561127557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b6001830390505b6000851115611344576030600a868115156112c457fe5b06017f01000000000000000000000000000000000000000000000000000000000000000286828060019003935060ff1681518110151561130057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8581151561133c57fe5b0494506112ad565b5b5050505050919050565b6113576120ca565b6000806000806000807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9550600094505b60011561189f57611422611411896040805190810160405280600181526020017f22000000000000000000000000000000000000000000000000000000000000008152506040805190810160405280600181526020017f2200000000000000000000000000000000000000000000000000000000000000815250610ecf9092919063ffffffff16565b868b611e349092919063ffffffff16565b95507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86141561150f576114df6114ce896040805190810160405280600181526020017f27000000000000000000000000000000000000000000000000000000000000008152506040805190810160405280600181526020017f2700000000000000000000000000000000000000000000000000000000000000815250610ecf9092919063ffffffff16565b868b611e349092919063ffffffff16565b95507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff86141561150e57611a86565b5b600288510186019550600093505b885186101561187e577f2000000000000000000000000000000000000000000000000000000000000000898781518110151561155557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061166757507f090000000000000000000000000000000000000000000000000000000000000089878151811015156115f857fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061170b57507f0d00000000000000000000000000000000000000000000000000000000000000898781518110151561169c57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806117af57507f0a00000000000000000000000000000000000000000000000000000000000000898781518110151561174057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b156117c1578580600101965050611879565b7f3a0000000000000000000000000000000000000000000000000000000000000089878151811015156117f057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156118745785806001019650506001935061187e565b61187e565b61151d565b885186141561188c57611a86565b83156118975761189f565b859450611388565b600192506118ed6040805190810160405280600181526020017f2200000000000000000000000000000000000000000000000000000000000000815250878b611e349092919063ffffffff16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561199557600092506119656040805190810160405280600181526020017f2700000000000000000000000000000000000000000000000000000000000000815250878b611e349092919063ffffffff16565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561199457611a86565b5b60018201915082156119f2576119eb6040805190810160405280600181526020017f2200000000000000000000000000000000000000000000000000000000000000815250838b611e349092919063ffffffff16565b9050611a3f565b611a3c6040805190810160405280600181526020017f2700000000000000000000000000000000000000000000000000000000000000815250838b611e349092919063ffffffff16565b90505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811415611a6c57611a86565b611a83828383038b611e9b9092919063ffffffff16565b96505b50505050505092915050565b611a9a6120ca565b611aa261215e565b6000806000806028604051805910611ab75750595b90808252806020026020018201604052509450600093505b6014841015611c92578360130360080260020a8773ffffffffffffffffffffffffffffffffffffffff16811515611b0257fe5b047f01000000000000000000000000000000000000000000000000000000000000000292506010837f0100000000000000000000000000000000000000000000000000000000000000900460ff16811515611b5957fe5b047f0100000000000000000000000000000000000000000000000000000000000000029150817f01000000000000000000000000000000000000000000000000000000000000009004601002837f01000000000000000000000000000000000000000000000000000000000000009004037f0100000000000000000000000000000000000000000000000000000000000000029050611bf782611f1e565b8585600202815181101515611c0857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611c4181611f1e565b8560018660020201815181101515611c5557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508380600101945050611acf565b8495505050505050919050565b611ca76120ca565b600080600080851415611cf1576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509350611de1565b600092508491505b6000821115611d1e57600a82811515611d0e57fe5b0491508280600101935050611cf9565b8260ff16604051805910611d2f5750595b908082528060200260200182016040525093506001830390505b6000851115611de0576030600a86811515611d6057fe5b06017f01000000000000000000000000000000000000000000000000000000000000000284828060019003935060ff16815181101515611d9c57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85811515611dd857fe5b049450611d49565b5b505050919050565b60005b602082101515611e115782518452602084019350602083019250602082039150611dec565b6001826020036101000a0390508019835116818551168181178652505050505050565b60008060008060208701925060208601915082611e598689510387860189518661200e565b0390508651811015611e6d57809350611e91565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93505b5050509392505050565b611ea36120ca565b60008084865103841115611eb8578486510393505b600084111515611eda5760206040519081016040528060008152509250611f15565b83604051805910611ee85750595b90808252806020026020018201604052509250602086019150602083019050611f148186840186611de9565b5b50509392505050565b6000600a7f010000000000000000000000000000000000000000000000000000000000000002827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161015611fbd576030827f01000000000000000000000000000000000000000000000000000000000000009004017f0100000000000000000000000000000000000000000000000000000000000000029050612009565b6057827f01000000000000000000000000000000000000000000000000000000000000009004017f01000000000000000000000000000000000000000000000000000000000000000290505b919050565b600080600080600088871115156120b85760208711151561206f5760018760200360080260020a031980875116888b038a018a96505b81838851161461206457600187019650806001880310612044578b8b0196505b5050508394506120be565b8686209150879350600092505b868903831115156120b75786842090508060001916826000191614156120a4578394506120be565b600184019350828060010193505061207c565b5b88880194505b50505050949350505050565b602060405190810160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061211f57805160ff191683800117855561214d565b8280016001018555821561214d579182015b8281111561214c578251825591602001919060010190612131565b5b50905061215a9190612172565b5090565b602060405190810160405280600081525090565b61219491905b80821115612190576000816000905550600101612178565b5090565b905600a165627a7a723058206d86f2781ae436e4e332cf70a90cf7f311c94a40d146d0b14cbf5d31f825a1a60029";

    public static final String ABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getErrno\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"}],\"name\":\"stringToUint\",\"outputs\":[{\"name\":\"_ret\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"},{\"name\":\"_str2\",\"type\":\"string\"},{\"name\":\"_topic\",\"type\":\"string\"}],\"name\":\"log\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"},{\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"log\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"},{\"name\":\"_i\",\"type\":\"int256\"}],\"name\":\"log\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_version\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"}],\"name\":\"log\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"paramList\",\"type\":\"string\"}],\"name\":\"setData\",\"outputs\":[{\"name\":\"ret\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"},{\"name\":\"_topic\",\"type\":\"string\"}],\"name\":\"log\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSender\",\"outputs\":[{\"name\":\"_ret\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"_ret\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"paramList\",\"type\":\"string\"}],\"name\":\"getData\",\"outputs\":[{\"name\":\"data\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_str\",\"type\":\"string\"},{\"name\":\"_ui\",\"type\":\"uint256\"}],\"name\":\"log\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]";

    private FileData(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, Boolean isInitByName) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit, isInitByName);
    }

    private FileData(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, Boolean isInitByName) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit, isInitByName);
    }

    private FileData(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit, false);
    }

    private FileData(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit, false);
    }

    public Future<Uint256> getErrno() {
        Function function = new Function("getErrno", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> stringToUint(Utf8String _str) {
        Function function = new Function("stringToUint", 
                Arrays.<Type>asList(_str), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> log(Utf8String _str, Utf8String _str2, Utf8String _topic) {
        Function function = new Function("log", 
                Arrays.<Type>asList(_str, _str2, _topic), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> log(Utf8String _str, Address _addr) {
        Function function = new Function("log", 
                Arrays.<Type>asList(_str, _addr), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> log(Utf8String _str, Int256 _i) {
        Function function = new Function("log", 
                Arrays.<Type>asList(_str, _i), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> register(Utf8String _name, Utf8String _version) {
        Function function = new Function("register", Arrays.<Type>asList(_name, _version), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void register(Utf8String _name, Utf8String _version, TransactionSucCallback callback) {
        Function function = new Function("register", Arrays.<Type>asList(_name, _version), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<Uint256> log(Utf8String _str) {
        Function function = new Function("log", 
                Arrays.<Type>asList(_str), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> kill() {
        Function function = new Function("kill", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void kill(TransactionSucCallback callback) {
        Function function = new Function("kill", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<TransactionReceipt> setData(Utf8String paramList) {
        Function function = new Function("setData", Arrays.<Type>asList(paramList), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void setData(Utf8String paramList, TransactionSucCallback callback) {
        Function function = new Function("setData", Arrays.<Type>asList(paramList), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<Uint256> log(Utf8String _str, Utf8String _topic) {
        Function function = new Function("log", 
                Arrays.<Type>asList(_str, _topic), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Utf8String> getSender() {
        Function function = new Function("getSender", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Utf8String> getOwner() {
        Function function = new Function("getOwner", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Utf8String> getData(Utf8String paramList) {
        Function function = new Function("getData", 
                Arrays.<Type>asList(paramList), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Uint256> log(Utf8String _str, Uint256 _ui) {
        Function function = new Function("log", 
                Arrays.<Type>asList(_str, _ui), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public static Future<FileData> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployAsync(FileData.class, web3j, credentials, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static Future<FileData> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployAsync(FileData.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static FileData load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new FileData(contractAddress, web3j, credentials, gasPrice, gasLimit, false);
    }

    public static FileData load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new FileData(contractAddress, web3j, transactionManager, gasPrice, gasLimit, false);
    }

    public static FileData loadByName(String contractName, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new FileData(contractName, web3j, credentials, gasPrice, gasLimit, true);
    }

    public static FileData loadByName(String contractName, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new FileData(contractName, web3j, transactionManager, gasPrice, gasLimit, true);
    }
}
