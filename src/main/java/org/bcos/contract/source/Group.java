package org.bcos.contract.source;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.concurrent.Future;
import org.bcos.channel.client.TransactionSucCallback;
import org.bcos.web3j.abi.TypeReference;
import org.bcos.web3j.abi.datatypes.Address;
import org.bcos.web3j.abi.datatypes.Bool;
import org.bcos.web3j.abi.datatypes.DynamicArray;
import org.bcos.web3j.abi.datatypes.Function;
import org.bcos.web3j.abi.datatypes.Type;
import org.bcos.web3j.abi.datatypes.Utf8String;
import org.bcos.web3j.abi.datatypes.generated.Bytes32;
import org.bcos.web3j.crypto.Credentials;
import org.bcos.web3j.crypto.EncryptType;
import org.bcos.web3j.protocol.Web3j;
import org.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.bcos.web3j.tx.Contract;
import org.bcos.web3j.tx.TransactionManager;

/**
 * Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>, or {@link org.bcos.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version none.
 */
public final class Group extends Contract {
    private static String BINARY = "60606040526000600160006101000a81548160ff0219169083151502179055506000600160016101000a81548160ff021916908315150217905550341561004257fe5b5b5b5b610bbb806100546000396000f300606060405236156100a2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063045894ab146100a45780632150c518146100ce5780633a50f68b14610143578063644d8164146101ee5780637dab61b6146102875780638586b2f0146102a95780639614c7691461033a578063c878851d14610394578063e7d66cac146103b6578063ee6d84c51461047d575bfe5b34156100ac57fe5b6100b46104a7565b604051808215151515815260200191505060405180910390f35b34156100d657fe5b6100de6104bf565b6040518080602001828103825283818151815260200191508051906020019060200280838360008314610130575b8051825260208311156101305760208201915060208101905060208303925061010c565b5050509050019250505060405180910390f35b341561014b57fe5b610165600480803560001916906020019091905050610522565b60405180806020018281038252838181518152602001915080519060200190808383600083146101b4575b8051825260208311156101b457602082019150602081019050602083039250610190565b505050905090810190601f1680156101e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101f657fe5b6101fe610631565b604051808060200182810382528381815181526020019150805190602001908083836000831461024d575b80518252602083111561024d57602082019150602081019050602083039250610229565b505050905090810190601f1680156102795780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561028f57fe5b6102a7600480803515159060200190919050506106da565b005b34156102b157fe5b610320600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506106f8565b604051808215151515815260200191505060405180910390f35b341561034257fe5b610392600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610841565b005b341561039c57fe5b6103b46004808035151590602001909190505061085c565b005b34156103be57fe5b61047b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091908035151590602001909190505061087a565b005b341561048557fe5b61048d610a59565b604051808215151515815260200191505060405180910390f35b6000600160009054906101000a900460ff1690505b90565b6104c7610a71565b600380548060200260200160405190810160405280929190818152602001828054801561051757602002820191906000526020600020905b815460001916815260200190600101908083116104ff575b505050505090505b90565b61052a610a85565b60006000836000191660001916815260200190815260200160002060009054906101000a900460ff1615610613576004600083600019166000191681526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106075780601f106105dc57610100808354040283529160200191610607565b820191906000526020600020905b8154815290600101906020018083116105ea57829003601f168201915b5050505050905061062c565b6020604051908101604052806000815250905061062c565b5b919050565b610639610a85565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106cf5780601f106106a4576101008083540402835291602001916106cf565b820191906000526020600020905b8154815290600101906020018083116106b257829003601f168201915b505050505090505b90565b80600160016101000a81548160ff0219169083151502179055505b50565b6000600060028484600060405160200152604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182805190602001908083835b6020831061077d578051825260208201915060208101905060208303925061075a565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060206040518083038160008661646e5a03f115156107bd57fe5b5050604051805190509050600160019054906101000a900460ff161561080e5760006000826000191660001916815260200190815260200160002060009054906101000a900460ff1615915061083a565b60006000826000191660001916815260200190815260200160002060009054906101000a900460ff1691505b5092915050565b8060029080519060200190610857929190610a99565b505b50565b80600160006101000a81548160ff0219169083151502179055505b50565b60006000600060028787600060405160200152604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182805190602001908083835b6020831061090157805182526020820191506020810190506020830392506108de565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060206040518083038160008661646e5a03f1151561094157fe5b50506040518051905092508315610a1c5760009150600090505b6003805490508110156109ad57826000191660038281548110151561097c57fe5b906000526020600020900160005b505460001916141561099f57600191506109ad565b5b808060010191505061095b565b600015158215151415610a1b57600380548060010182816109ce9190610b19565b916000526020600020900160005b8590919091509060001916905550846004600085600019166000191681526020019081526020016000209080519060200190610a19929190610a99565b505b5b8360006000856000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50505050505050565b6000600160019054906101000a900460ff1690505b90565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ada57805160ff1916838001178555610b08565b82800160010185558215610b08579182015b82811115610b07578251825591602001919060010190610aec565b5b509050610b159190610b45565b5090565b815481835581811511610b4057818360005260206000209182019101610b3f9190610b6a565b5b505050565b610b6791905b80821115610b63576000816000905550600101610b4b565b5090565b90565b610b8c91905b80821115610b88576000816000905550600101610b70565b5090565b905600a165627a7a72305820d4129343f65a4832600d46fdb6688fd990f1fe30d35e23663c65c0bef0e272e20029";

    public static final String ABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getCreate\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getKeys\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getFuncDescwithPermissionByKey\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDesc\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"black\",\"type\":\"bool\"}],\"name\":\"setBlack\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"func\",\"type\":\"string\"}],\"name\":\"getPermission\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"desc\",\"type\":\"string\"}],\"name\":\"setDesc\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"create\",\"type\":\"bool\"}],\"name\":\"setCreate\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"func\",\"type\":\"string\"},{\"name\":\"funcDesc\",\"type\":\"string\"},{\"name\":\"permission\",\"type\":\"bool\"}],\"name\":\"setPermission\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlack\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]";

    private static String GUOMI_BINARY = "60606040526000600160006101000a81548160ff0219169083151502179055506000600160016101000a81548160ff021916908315150217905550341561004257fe5b5b5b5b610bbb806100546000396000f300606060405236156100a2576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632164dee2146100a45780632186707a146100ce5780635c66220b1461015f578063843d494c14610181578063d4de99b91461022c578063d564f01f146102f3578063d95b281b14610315578063dff483b91461038a578063f7edc45614610423578063fd6050811461047d575bfe5b34156100ac57fe5b6100b46104a7565b604051808215151515815260200191505060405180910390f35b34156100d657fe5b610145600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506104bf565b604051808215151515815260200191505060405180910390f35b341561016757fe5b61017f60048080351515906020019091905050610608565b005b341561018957fe5b6101a3600480803560001916906020019091905050610626565b60405180806020018281038252838181518152602001915080519060200190808383600083146101f2575b8051825260208311156101f2576020820191506020810190506020830392506101ce565b505050905090810190601f16801561021e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023457fe5b6102f1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919080351515906020019091905050610735565b005b34156102fb57fe5b61031360048080351515906020019091905050610914565b005b341561031d57fe5b610325610932565b6040518080602001828103825283818151815260200191508051906020019060200280838360008314610377575b80518252602083111561037757602082019150602081019050602083039250610353565b5050509050019250505060405180910390f35b341561039257fe5b61039a610995565b60405180806020018281038252838181518152602001915080519060200190808383600083146103e9575b8051825260208311156103e9576020820191506020810190506020830392506103c5565b505050905090810190601f1680156104155780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561042b57fe5b61047b600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610a3e565b005b341561048557fe5b61048d610a59565b604051808215151515815260200191505060405180910390f35b6000600160019054906101000a900460ff1690505b90565b6000600060028484600060405160200152604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182805190602001908083835b602083106105445780518252602082019150602081019050602083039250610521565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060206040518083038160008661646e5a03f1151561058457fe5b5050604051805190509050600160019054906101000a900460ff16156105d55760006000826000191660001916815260200190815260200160002060009054906101000a900460ff16159150610601565b60006000826000191660001916815260200190815260200160002060009054906101000a900460ff1691505b5092915050565b80600160006101000a81548160ff0219169083151502179055505b50565b61062e610a71565b60006000836000191660001916815260200190815260200160002060009054906101000a900460ff1615610717576004600083600019166000191681526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561070b5780601f106106e05761010080835404028352916020019161070b565b820191906000526020600020905b8154815290600101906020018083116106ee57829003601f168201915b50505050509050610730565b60206040519081016040528060008152509050610730565b5b919050565b60006000600060028787600060405160200152604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000002815260140182805190602001908083835b602083106107bc5780518252602082019150602081019050602083039250610799565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060206040518083038160008661646e5a03f115156107fc57fe5b505060405180519050925083156108d75760009150600090505b60038054905081101561086857826000191660038281548110151561083757fe5b906000526020600020900160005b505460001916141561085a5760019150610868565b5b8080600101915050610816565b6000151582151514156108d657600380548060010182816108899190610a85565b916000526020600020900160005b85909190915090600019169055508460046000856000191660001916815260200190815260200160002090805190602001906108d4929190610ab1565b505b5b8360006000856000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50505050505050565b80600160016101000a81548160ff0219169083151502179055505b50565b61093a610b31565b600380548060200260200160405190810160405280929190818152602001828054801561098a57602002820191906000526020600020905b81546000191681526020019060010190808311610972575b505050505090505b90565b61099d610a71565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a335780601f10610a0857610100808354040283529160200191610a33565b820191906000526020600020905b815481529060010190602001808311610a1657829003601f168201915b505050505090505b90565b8060029080519060200190610a54929190610ab1565b505b50565b6000600160009054906101000a900460ff1690505b90565b602060405190810160405280600081525090565b815481835581811511610aac57818360005260206000209182019101610aab9190610b45565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610af257805160ff1916838001178555610b20565b82800160010185558215610b20579182015b82811115610b1f578251825591602001919060010190610b04565b5b509050610b2d9190610b6a565b5090565b602060405190810160405280600081525090565b610b6791905b80821115610b63576000816000905550600101610b4b565b5090565b90565b610b8c91905b80821115610b88576000816000905550600101610b70565b5090565b905600a165627a7a723058202eb275378e4ae174b9a799af7a114975655bc0140e71f39b0f2e9cca4483d1ff0029";

    private Group(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, Boolean isInitByName) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit, isInitByName);
        if(EncryptType.encryptType == 1) super.setContractBinary(GUOMI_BINARY);
    }

    private Group(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, Boolean isInitByName) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit, isInitByName);
        if(EncryptType.encryptType == 1) super.setContractBinary(GUOMI_BINARY);
    }

    private Group(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit, false);
        if(EncryptType.encryptType == 1) super.setContractBinary(GUOMI_BINARY);
    }

    private Group(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit, false);
        if(EncryptType.encryptType == 1) super.setContractBinary(GUOMI_BINARY);
    }

    public Future<Bool> getCreate() {
        Function function = new Function("getCreate", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<DynamicArray<Bytes32>> getKeys() {
        Function function = new Function("getKeys", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Utf8String> getFuncDescwithPermissionByKey(Bytes32 key) {
        Function function = new Function("getFuncDescwithPermissionByKey", 
                Arrays.<Type>asList(key), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<Utf8String> getDesc() {
        Function function = new Function("getDesc", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> setBlack(Bool black) {
        Function function = new Function("setBlack", Arrays.<Type>asList(black), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void setBlack(Bool black, TransactionSucCallback callback) {
        Function function = new Function("setBlack", Arrays.<Type>asList(black), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<Bool> getPermission(Address to, Utf8String func) {
        Function function = new Function("getPermission", 
                Arrays.<Type>asList(to, func), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> setDesc(Utf8String desc) {
        Function function = new Function("setDesc", Arrays.<Type>asList(desc), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void setDesc(Utf8String desc, TransactionSucCallback callback) {
        Function function = new Function("setDesc", Arrays.<Type>asList(desc), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<TransactionReceipt> setCreate(Bool create) {
        Function function = new Function("setCreate", Arrays.<Type>asList(create), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void setCreate(Bool create, TransactionSucCallback callback) {
        Function function = new Function("setCreate", Arrays.<Type>asList(create), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<TransactionReceipt> setPermission(Address to, Utf8String func, Utf8String funcDesc, Bool permission) {
        Function function = new Function("setPermission", Arrays.<Type>asList(to, func, funcDesc, permission), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public void setPermission(Address to, Utf8String func, Utf8String funcDesc, Bool permission, TransactionSucCallback callback) {
        Function function = new Function("setPermission", Arrays.<Type>asList(to, func, funcDesc, permission), Collections.<TypeReference<?>>emptyList());
        executeTransactionAsync(function, callback);
    }

    public Future<Bool> getBlack() {
        Function function = new Function("getBlack", 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public static Future<Group> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        if(EncryptType.encryptType == 1) setBinary(getGuomiBinary());
        return deployAsync(Group.class, web3j, credentials, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static Future<Group> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        if(EncryptType.encryptType == 1) setBinary(getGuomiBinary());
        return deployAsync(Group.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static Group load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Group(contractAddress, web3j, credentials, gasPrice, gasLimit, false);
    }

    public static Group load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Group(contractAddress, web3j, transactionManager, gasPrice, gasLimit, false);
    }

    public static Group loadByName(String contractName, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Group(contractName, web3j, credentials, gasPrice, gasLimit, true);
    }

    public static Group loadByName(String contractName, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Group(contractName, web3j, transactionManager, gasPrice, gasLimit, true);
    }

    public static void setBinary(String binary) {
        BINARY = binary;
    }

    public static String getGuomiBinary() {
        return GUOMI_BINARY;
    }
}
